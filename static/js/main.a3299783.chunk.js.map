{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","style","listStyle","map","id","PostInfo","post","title","length","PostList","posts","padding","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o48IAEaA,EAAW,SAAC,GAAD,QACtBC,KAAQC,EADc,EACdA,KAAMC,EADQ,EACRA,MADQ,OAGtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCJQI,G,YAAc,SAAC,GAAD,QACzBC,QACEL,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAK,EAJuB,EAIvBA,KAJuB,OAOzB,qBAAIJ,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAGF,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SCvBMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIN,UAAU,cAAcO,MAAO,CAAEC,UAAW,QAAhD,SACGF,EAASG,KAAI,SAAAN,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQO,UCFrCC,EAAW,SAAC,GAAD,QACtBC,KACEC,EAFoB,EAEpBA,MACAhB,EAHoB,EAGpBA,KACAO,EAJoB,EAIpBA,KACAE,EALoB,EAKpBA,SALoB,OAQtB,qBAAIN,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUhB,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGkB,IAApBE,EAASQ,OAEN,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAIF,cAAC,EAAD,CAAaR,SAAUA,QCjClBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBACEhB,UAAU,WACVO,MAAO,CACLU,QAAS,EACTT,UAAW,QAJf,SAOGQ,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCD/B,IAAMM,EAAQE,EAAgBT,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cf,MANmBsB,EAMDP,EAAKO,OALhBC,EAAgBC,MAAK,SAAAxB,GAAI,OAAIA,EAAKa,KAAOS,MAAW,MAM3Db,SAAUgB,EACPC,QAAO,SAAApB,GAAO,OAAIA,EAAQqB,SAAWZ,EAAKF,QAR/C,IAAqBS,KAWRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QClBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3299783.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: { name, email },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <li className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </li>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\" style={{ listStyle: 'none' }}>\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({\n  post: {\n    title,\n    user,\n    body,\n    comments,\n  },\n}) => (\n  <li className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length === 0\n      ? (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n      : (\n        <CommentList comments={comments} />\n      )\n    }\n  </li>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <ul\n    className=\"PostList\"\n    style={{\n      padding: 0,\n      listStyle: 'none',\n    }}\n  >\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </ul>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: commentsFromServer\n    .filter(comment => comment.postId === post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}